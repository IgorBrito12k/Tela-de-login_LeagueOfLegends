@import url('https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@300;400;500;600;700&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Lexend Deca', sans-serif;
}

:root {
    --white: #fff;
    --whitesmoke: #f9f9f9;
    --light-grey: #ececec;
    --grey: #c4c4c4;
    --medium-gray: #a7a7a7;
    --deep-grey: #343434;
    --black: #000000;
    --blue: #1b77f3;
    --red: #cf3c3f;
}

main {
    display: flex;
}

.login {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    max-width: 500px;
    min-height: 100vh;
    /* clamp() serve para que o padding cresca até certo ponto porém não passe o limite */
    /* clamp(min, preferencia, max) */
    padding: clamp(35px, 8%, 70px);
}

.wrapper {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.login_logo {
    width: 130px;
    margin-bottom: 80px;
}

.login_title {
    color: var(--deep-grey);
    font-size: 1.5em;
    margin-bottom: 30px;
}

.login_label {
    display: block;
    margin-bottom: 20px;
    width: 100%;
}

.input {
    width: 100%;
    background-color: var(--light-grey);
    border: 2px solid transparent;
    border-radius: 5px;
    outline: none;
    font-size: 0.9em;
    padding: 25px 10px 10px;
    font-weight: 600;
    color: var(--deep-grey);
}

.login_label span {
    position: absolute;
    font-size: 0.8em;
    font-weight: 700;
    text-transform: uppercase;
    color: var(--medium-gray);
    margin: 20px;
    cursor: text;
    transition: all 200ms ease;
}

/* :focus serve para quando o elemento estiver selecionado */
.input:focus {
   background: var(--whitesmoke); 
   border: 2px solid var(--deep-grey);
}

.login_label .span-active {
    font-size: 0.7em;
    margin: 8px 10px;
}

.login_icons {
    display: flex;
    gap: 10px;
    width: 100%;
    margin-top: 20px;
}

.login_icons img {
    width: 20px;
}

.icons_button {
    width: 33.33%;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 35px;
    border-radius: 5px;
    cursor: pointer;
    border: none;
}

/* acessar o primeiro botão que é filho da div .login_icons */
.login_icons .icons_button:nth-child(1) {
    background-color: var(--blue);
}

.login_icons .icons_button:nth-child(2) {
    background-color: var(--light-grey);
}

.login_icons .icons_button:nth-child(3) {
    background-color: var(--black);
}

.login_label--checkbox {
    width: 100%;
    margin: 15px 0 50px;
    font-size: 0.9em;
    font-weight: 500;
    display: flex;
    align-items: center;
}

.input_checkbox {
    /* para estilizar o checkbox, primeiro precisamos resetar o estilo padrão */
    appearance: none;
    width: 20px;
    height: 20px;
    background-color: var(--light-grey);
    margin-right: 8px;
    border-radius: 3px;
}

.input_checkbox:checked {
    background-color: var(--red);
}

/* ::after adciona um elemento "falso" depois do elemento */
/* apenas quando for clicado */
.input_checkbox:checked::after {
    content: "";
    display: block;
    width: 5px;
    height: 10px;
    border: 3px solid white;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
    margin: 2px 6px;
}

.login_button {
    width: 60px;
    height: 60px;
    padding: 20px;
    align-items: center;
    justify-content: center;
    background-color: var(--red);
    border-radius: 20px;
    border: none;
    cursor: pointer;
    margin-bottom: 60px;
}

.login_button svg {
    fill: white;
}

.login_button:disabled {
    cursor: auto;
    background-color: white;
    border: 2px solid var(--light-grey);
} 

.login_button:disabled svg {
    fill: var(--grey);
}

.login_link {
    font-size: 0.8em;
    text-decoration: none;
    color: var(--medium-gray);
    text-transform: uppercase;
    margin-bottom: 5px;
    font-weight: 700;
}

.wallpaper {
    width: 100%;
    background-image: url(./img/wallpaper.jpg);
    background-size: cover;
    background-position: center;
    /* ocupa todo o espaço apenas disponível pra ela */
    flex: 1;
}